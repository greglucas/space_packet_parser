name: Run Style Checks and Test
on: pull_request
jobs:
  pycodestyle:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build . --file Dockerfile --target style --tag space-packet-parser-style:latest
      - name: Run PyCodeStyle in Docker
        run: docker run -i space-packet-parser-style:latest
  pylint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build . --file Dockerfile --target lint --tag space-packet-parser-lint:latest
      - name: Run Pylint in Docker
        run: docker run -i space-packet-parser-lint:latest
  docker-tests:
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    uses: ./.github/workflows/test-python-version.yml
    with:
      python-version: ${{ matrix.python-version }}

  ci-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13-dev']
    defaults:
      run:
        shell: bash


    steps:
      - uses: actions/checkout@v4
        with:
          # We need the full history to generate the proper version number
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install . pytest
      
      - name: Testing
        run: |
          pytest --color=yes
